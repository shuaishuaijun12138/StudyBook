一.基础知识
	1.javadoc-d 生成目标路径 源文件 编写一个API帮助文档（html）
	2.import java.util.*;  导入一个包  创建一个扫描器对象。例如：Scanner in = new Scanner(System.in);给对象输入一个数 x=in.nextInt();
	3.(这是日期的格式化)%te 一个月中的某天  %tb月份简称  %ta星期简称   %ty2位年份 %tc全部日期  %tm月份  %tj一年中的第几天（大写是全称）
	4.1970年1月1日  UNIX到现在的事件就是时间戳(计算机元年)
	5.（这是时间的格式化）%tH  2位数组的24小时进制   %tk 1-2位24小时   %tM  二位数字分钟   %tS二位数字秒数   %tL三位数字毫秒数  %tN9位数字毫秒数  %tp上午还是下午 %ts时间戳的秒数 %tQ时间戳的毫秒数
	6.（常用的时间日期组合）%tF(-分隔，4位年份) %tD(/分隔，2为年份) %tc(全部日期和时间)
	7.for(遍历指针：遍历对象){}
	8.Arrays.fill(数组对象，填充个数)(数组对象，开始位置，结束位置，填充内容)填充对象
	9.Arrays.copyOf(数组对象，数组长度)（如果长度比原数组长，则用0代替）复制数组
	10.Arrays.copyOfRange(数组对象，开始位置，结束位置)复制数组
	11.字符串初始化方法:直接复制，创建对象用构造方法，用字符数组创建
	12.如果将字符串与其他类型连接起来，会自动转换为字符串类型（等于直接调用toString的方法）
	13.str.startsWith(字符串内容)（字符串内容，开始位置）判断是否以这个字符串开头
	14.str.endsWith(字符串内容)判断字符串是否以这个结尾
	15.str.toCharArray()  将字符串转换为一个字符数组
	16.str.contains（字符串内容）判断一个子字符串是否存在，返回boolean
	17.str.substring(开始位置)(开始位置，结束位置)截取字符串
	18.str.replace(旧的子字符串，要替换的内容)字符串的替换
	19.str.replaceAll()和replace一样，但是支持正则
	20.str.replaceFirst()将第一次出现的字符串进行替换
	21.str.split(分隔符号)(分隔符号，分隔次数)分割字符串为一个数组，如果想要定义多个分隔符可以使用'|',如果想用'|' 分隔,则使用'\\|';
	22.str.toLowerCase()将字符串转换为小写  str.toUpperCase()转换为大写
	23.str.time()去除所有空白内容
	24.str.equals(字符串)这种判断可以让直接赋值=对象定义
	25.str.equalslgnoreCase()这种是判断字符串长度相等，字符相同（忽略大小写）
	26.String.format(格式方式，字符串对象)字符串格式化
	27.转换标识符('-'左对齐，'#'输出进制数的时候前面补充格式,'+'显示数字的正负号,'0'不够最小位数用0填充,'('用括号吧负数括起来)
	28.创建StringBuffer xx=new Stringbuffer();如果为数字，则表示为数字容量;;如果为字符串，则表示初始化的字符串内容
	29.sbf.append(添加的内容)追加字符串
	30.sbf.setCharAt(被替换的位置，替换后的字符)（只能是一个字符，不能是字符串）
	31.sbf.reverse()将字符串倒叙
	32.sbf.insert(插入的索引，插入的字符串)
	33.sbf.delete(开始位置，结束位置)删除内容
	34.sbf和sbd可以通过toString()转换为String
	35.string可以通过创建对象的方法转换为sbf和sbd 例如 StringBuffer sbf=new StringBuffer(str);
	36.对一个String进行赋值就会在创建一个对象，会影响系统性能
	37.操作少，数据少，用String(最不安全)  单线程，操作多，数据多，用StringBuilder(操作最快)  多线程，数据多，操作多，用StringBuffer(最安全)
	38.final  定义一个常量
二.面向对象
	1.参数分为，值参数，引用参数，不定长参数
	2.权限修饰符 返回值类型 方法名(参数类型... 参数名)(传递进来的是一个数组)
	3.类，对象，引用变量的关系（类创建对象的同时，声明引用变量，引用变量引用对象）
	4.由static修饰的代码块称为静态代码块，静态代码块由始至终只运行一次，非静态代码块每次创建对象的时候，会在构造方法之前运行
	5.重写后的方法权限不能小与原方法的权限
	6.super类似于this，只不过他是指向父类的关键字
	7.如果子类中使用super（）的构造方法，其他初始化代码只能卸载super（）之后
	8.object类中getClass（）notify（）notifyAll（）wait（）不能被重写
	9.object常用的方法  getClass()获取到当前类，然后调用getName()获取到类的名字
	10.toString()将一个对象返回给一个字符串，通常都是重写这个方法
	11.equals()不能比较两个对象的内容，通常都是重写这个方法
	12.方法的重载：参数类型不同，参数个数不同，参数顺序不同，方法名，（参数返回类型不同不可以）
	13.向上类型转换：就是把子类对象赋值给父类类型的变量
	14.Person p = new Student这个是创建父类对象(在执行向上操作时，父类对象不能调用子类属性或方法)
	15.向下类型转换必须使用显示类型转换.......Student(子类) s = Student q(父类对象)
	16.myobject(父类对象) instanceof ExampleClass（子类） 判断一个类实现了某个接口，也可以判断一个实例对象是否属于一个类
	17.如果子类也被声明为抽象类，则可以不用实现父类中所有的抽象方法(使用abstract定义的为抽象类或抽象方法)(构造方法不能定义为抽象方法)
	18.使用interface关键字定义的为接口
	19.在接口定义的变量为static和final 在定义变量时，必须进行初始化，而且子类中不能在进行赋值
	20.使用implements关键字让一个类继承一个接口(一个类可以继承多个接口:用，隔开)
	21.接口继承接口要使用extends而不是implements  （如果接口继承接口，在子类中实现子接口时，需要同时实现父接口和子接口）
	22.抽象类和接口都不能被实例化，但是抽象类可以有构造方法
	23.用import 包名.类名  (包名一般都是倒过来的）* 代表所有类包
	24.final修饰的类和方法不能被继承 不能被覆盖
	25.成员内部类，匿名类（没有构造方法，不能定义静态成员，不能有权限或static final abstract修饰符），静态内部类(一般用于调试，可以在里边声明main方法)，局部内部类（一般用接口实现）
	26.import java.util.* 导入java里边所有的常用包
三.处理
	1.非运行异常，必须用try..catch进行处理，或者用throws抛出
	2.要先在catch(Exception e)中间创建对象    异常对象.getMessage()获取异常事件的信息  .toString()获取异常的类型和性质   .printStackTrace()获取异常事件发生执行堆栈的内容
	3.catch()异常可以定义多个，执行顺序为先子类在父类（先精确找错误，在大范围找错误）
	4.返回值类型 方法名 （参数表） throws () 异常类型名{}  （抛出异常通常使用在声明方法时）(通常抛出异常的信息和性质)
	5.throw new 异常类型名(异常信息)   （通常为自定义异常，）（通常用在方法体）（直接抛出一个异常实例）(使用这个一定会发生某种异常)
四.Java常用类
	1.char=>Character  int=>Integer  这是特殊的类型包装，正常的包装都是吧第一个字母大写
	2.包装（类似与拆装箱）的作用就是把基本数据类型和对象类型的转换
	3.Integer定义好的常量MAX_VALUE MIN_VALUE SIZE TYPE
	4.Integer创建对象的方法可以在括号里边加上（数组）或者（字符串）
	5.Integer toBinaryString()二进制表示 toHexString()返回八进制表示 toOctalString()返回十六进制表示 intValue()以int型返回对象 equals()判断是否相等 compareTo() 判断两个字符串是否相等
	6.Boolean()用字符串创建的对象，写任意字符串都是false除了true
	7.Character() isUpperCase()判断是否为大写 isLetter()判断是否为字字符母 isDigit()判断是否是数字
	8.Integer a1=100 自动装箱  int i = new Integer()自动拆箱  (系统会自动将byte取值范围内的对象相等)
	9.Math.PI  或者  Math.E  等等表示系统自带的常量   Mtah位于java.lang.Math包内（系统自带，不需要引入）
	10.sin() asin()返回固定值 toRadians()将角度转换为弧度  toDegrees()将弧度转换为角度
	11.sprt()平方根 cbrt()立方根 pow（）x的y次方         exp()e的x次方    log()lnx的值    lng10() 取底数为10的对数
	12.ceil()  向上取整  floor()向下取整  rint()返回最近的结果，相同则返回偶数  round()加上0.5返回与参数接近的整数
	13.abs()取绝对值
	14.用Random创建的对象 nextInt(n)返回大于等于0小与n的随机整数
	15.getTime()获取对象到现在的时间点  after()对比是否在指定时间之后  before()对比是否在之后  setTime()设置事件
	16.使用Date类必须要调用java.util.Date  不能使用java.sql.Date(否则要求创建的对象必须有一个参数)
	17.SHORT完全为数字  MEDIUM较长  LONG更长  FULL完全格式
	18.DateFormat()类是一个抽象类 不能用new创建一个对象  可以使用静态工厂方法getDateInstance进行创建
	19.DateFormat df3 = new SimpleDateFormat("yyyy年MM月dd日 hh时mm分ss秒 EE", Locale.CHINA);  第一个参数设置事件的格式，第二个参数设置默认地区   输出时要用：对象.format(date日期对象)格式输出
	20.Calendar x=Calender.getInstance()初始化得到一个Calender的对象(这个类也是一个抽象类，不能被实例化，只能被继承或者用自身的构造方法初始化)
	21.Calendar   set()方法设置日历字段  get()获取日期字段  add/roll()添加时间量
 五.集合类
	1.java.util 包含Map，Collection     Collection包含Set,list 
	2.Collection类中 add()可以添加任何对象 remove()移除这个对象  isEmpty()判断是否为空  size()判断里边有几个内容  iterator()用于遍历容器
	3.用Collection 创建对象的时候调用这个类的一个子类ArrayList()这个类
	4.Iterator iterator=collection.iterator();用迭代器为这个接口的对象设置一个对象，然后用hasNext()判断是否有下一个参数，在内部创建一个object对象遍历集合
	5.ArratList(更善于查找)就是接口中数组  LinkedList(更善于添加和删除)类似与c语言的链表
	6.迭代的含义：重复执行一个过程(类似于递归)
	7.Iterator() 迭代器的常用方法 hasNext()判断是否还有元素可以迭代  next()返回迭代的下一个元素	
	8.list()的集合是一个数组  可以通过索引进行操作（删除或者添加之后索引自动更新）
	9.Set()(不规则存放元素)子类主要分为HashSet哈希和TreeSet树形     哈希里边创建的元素哈希值改变还可以继续存放内容相同的元素
	10.TreeSet(希望按照自然顺序存放:与插入顺序无关，至于本身元素性质有关)
	11.Map并没有继承collection接扣   containsKey()判断是否包含键值(Value)  put添加  keySet()返回所有键值对象的Set集合  values()返回所有值对象的Collection集合
	12.List集合关注：索引    Set集合关注:唯一性     Map集合关注:唯一的标识符
六.枚举与泛型
	1.枚举类型就好像是一个常量的集合
	2.在外边定义一个接口，里边包含常量 在类里边定义enum 名字{枚举类型名字...}  可以通过名字.枚举类型名字调用这个常量，但是只能通过这种方式调用
	3.枚举是一个接口  其名字默认为:Constants 实例为Constants
	4.values()返回枚举类型成员（以数组形式）  valuesof() 将普通字符串转化为枚举类型（一定要是枚举类型中有的） compareTo()用于比较枚举类型顺序 大于1等于0小与-1  ordinal()返回枚举索引值
	5.在枚举类中，枚举成员一定要放在最前面，构造方法必须是private(不写默认为私有的) 枚举成员最后面一个要有;   枚举如果有构造方法，枚举成员必须调用这个方法
	6.枚举可以继承接口，但是不能继承类 和正常继承的方法一样
	7.泛型就是给值一个类型范围，让程序更安全
	8.在创建泛型类的时候后面加一个<名字>（名字一般是一个大写字母） 在实例化的时候在给一个类型，定义方法的时候都用大写字母定义(可以定义多个泛型，默认是object，一旦要声明泛型，就要声明所有的泛型)
	9.可以通过泛型的继承限制泛型的类型<T extends List> 
	10.还可以通过通配符限制<?>通配符，通配符的对象不能添加和改变   使用<? extends 类型>这个他的对象不能比这个类型还要高（指定上界）使用super(指定了下届)
	11.子类可以继承父类的泛型和接口的泛型(可以和父类泛型的名字不一致)
七.窗体应用
	1.java.lang.Object=>java.awt.Component=>java.awt.Container=>java.awt.Window,java.swing.JComponent
	2.Component组件类  Container容器类   JComponent组件父类，用于生成控件
	3.JButton按钮 JCheckBox复选框 JComBox下列列表  JFrame框架类  JDialog对话框  JLabel标签组件  JRadioButton单选按钮  JList列表组件  JTextField文本框  JPasswordFiled密码框  JTextArea文本域  JOptionPane对话框
	4.setDefaultCloseOperation() 设置窗体以什么形式关闭  有四个参数DO_NOTHING_ON_CLOSE  DISPOSE_ON_CLOSE隐藏并且释放资源  HIDE_ON_CLOSE EXIT_ON_CLOSE
	5.getContentPane()将窗体转换为容器   通过容器中setBounds设置位置和高度宽度(设置给对象)   setVisible()设置是否可见(设置给对象)  setBackground()设置背景(设置给容器)  设置给对象的可以省略
	6.new JFreamTest().CreateJFream("窗体");  这个是实现这个类的某个方法（实现创建窗口的方法）
	7.想要堵塞父类的窗体  super(父类对象,"对话框的标题",true)第三个参数，真表示堵塞父类
	8.为对象创建一个点击事件 x.addActionListener(new ActionListener(){...})
	9.常见的Swing局部包括 FlowLayout流布局管理器,BorderLayout边界布局管理器,GridLayout网格布局管理
	10.FlowLayout的构造方法()第一个参数指定浮动方向FlowLayout.RIGHT等等  第二个参数表示水平间隔,垂直间隔      
	11.BorderLayout 默认放在中间位置，如果中间位置放满会自动覆盖   在用add添加的时候,设置第二个参数表示放置的位置BorderLayout.CENTER等等
	12.GridLayout 构造方法(一共几列，一共几行，横向间隔，纵向间隔) 
	13.容器和面板都可以选择布局，先给面板设置布局，再面板里添加组件，在把设置好的面板放在容器当中
	14.p1.setBorder(BorderFactory.createTitledBorder("面板1"));   给面板设计标题
	15.JScrollPane只能存放一个组件，并且不可以使用布局管理器   如果想要添加多个组件  可以先把组件放在JPanel面板里边再放在正里边
	16.JLabel创建一个标签  不能添加任何事件 构造方法（字符串，ioc图片，图标水平对齐方式）
	17.(自己手动绘制图片)创建图标  要继承Icon接口  必须实现三个方法，获取长度，获取宽度，绘制属性，对象，x，y
	18.使用图片作为背景Icon icon=new ImageIcon("src/16.jpg");   获取图片资源路径  (在标签上添加图片，改变标签大小不会影响图片大小)
	19.文本组件.setColumns设置文本长度   JTextArea.append()添加内容  JTextArea.setLineWrap()设置是否自动换行
	20.JButton.setEnabled()设置按钮是否可用  setToolTipText()按钮提示信息
	21.单选按钮要添加到一个按钮组中 ButtonGroup
	22.为事件源做监听事件一般都是在内部类实现
八.事件处理
	1.键盘事件分为  点击keyTyped，按下keyPressed（手指按下但并未松开），释放keyReleased（从键上松开）  需要继承KeyListener类
	2.getSource获取此事件组件对象 返回对象  getKeyChar()获取字符  getKeyCode()获取整数码   getKeyText()获取F1等等  isActionKey()用来查询事件中的键是否是动作件
	3.鼠标事件分为  MouseEntered移入  MouseClick点击  MousePressed按下  MouseReleased释放  MouseExited移出  需要继承MouseEvent
	4.getSource获得此次事件组件对象   getButton获取操作对应的int值   getClickCount用来获取按键次数
	5.getButton()有三个静态变量  1代表左键  2代表滑轮  3代表右键
	6.用户-》执行.事件源（组件）-》产生事件(事件)-》事件通知.(监听器)
	7.WindowFocusListener窗体焦点监听(控制窗体是否被选中)  WindowsStateListener窗体状态监听事件	WindowListener窗体其他监听事件
	8.窗体激活-----获取焦点------失去焦点-------窗体将要被关闭-------窗体不处于激活状态--------窗体被关闭
九.文件输入和输出流
	1.构造方法    1.直接写名字代表项目下的默认路径   2.包中的文件的路径src开头    3.绝对路径要从盘符开始
	2.构造方法    2.先创建一个文件夹  在文件夹下在寻找文件
	3.创建文件流对象使用构造方法时如果第二个参数为true  就是在文件末尾追加内容
	4.文件字节流FileInputStream等等     文件字符流FileReader等等  由于一个汉子站两个字节，所以为了避免乱码，此时应采用字符流
	5.使用缓冲字节流输出时，要多进行刷新操作  x.flush()
	6.使用缓冲字符流输入和输出时，可以按照行来存取
	7.流都要进行关闭，还要注意关闭的顺序(先关闭缓冲流，在关闭正常留)
	8.数据流可以写入或者读取某种类型的值
	9.不要把数字类型和双精度类型放在一起存入，不知道字符串的长度，会发生乱码
	10.字节流转换为字符流   后面带有Stream的是字节流   后面带有Reader的是字符流
	11.可以使用try()在里面创建流  可以在操作执行完之后自动释放
十.发射机制
	1.反射的三种创建方式  第一种通过静态属性  类.class  第二种通过 对象.getClass()  第三种通过Class.forName(填写某包下的类)(使用效果最好，功能最强大)
	2.getDeclaredConstructors()获取全部的构造方法   getDeclaredFields()获取全部成员变量    getDeclaredMethod()获取成员方法  （回去类的方法时要注意顺序，因为不同的顺序，会有不同的构造方法）
	3.获取指定参数的构造方法要在用int.class等等形式   构造方法对象.setAccessible打开私有权限
	4.getModifiers()获取修饰符的整数，在进行一次运算可以得到类型
	5.newInstance()通过反射机制创建一个新的构造方法
	6.通过  方法.invoke()可以调用发射出来的方法  第一个参数写上发射出来的构造方法的对象
	7.内置注解  @Override限定重写父类方法    @SuppressWarnings(添加禁止警告的内容)抑制编译器警告   @Depercated标识已过时
	8.自定义注解  @interfce 注解名称{ 注解成员变量类型 成员变量名称 初始值 }
	9.元注解=注解的注解    主要有：@Retention注解的保留时间（就是是否运行注解或是否吧注解添加到class当中,）,@Target注解指示注释类型所适用的程序元素的种类(就是选择注解能应用在那些方面)
十一.多线程处理
	1.进程是资源分配的最小单位，线程是最小的执行单位  一个进程可以有多个线程  线程共享进程资源
	2.Thread类   Runnable接口  吧运行的代码放在内部run方法中   通过对象.start开始执行这个进程
	3.何时使用Runnable(继承这个接口之后，要先创建类的对象然后创建一个线程对象作为参数)  因为类不支持多继承，如果要给一个JFrame类控制进程那么必须要继承Runnable
	4.线程.join 可以让一个线程在执行到某个条件的时候在执行另外一个进程，另外一个进程结束之后再执行这个进程
	5.interrupt()终端线程  直接调用这个方法就可以
	6.线程有10个优先级，从高往低执行   setPriority()设置线程的优先级 (这只是理论的执行顺序，具体CPU是怎样执行的不确定)//并不是很实用
	7.为了防止脏数据要对线程进行加密（就是防止多个进程阻塞）1.synchronized添加代码块  2.synchronized添加方法
	8.wait()暂停进程  notify()苏醒进程（恢复进程）
十二.网络服务
	1.TCP可靠 效率低 UDP不可靠 效率低n
	2.套接字Socket提供给程序可以对外进行连接的接口(把程序和网络连接)(第一个参数为ip地址，第二个参数为服务器端口)
	3.127.0.0.1本地回送地址
	4.InerAddress可以访问本地 访问指定ip地址 访问域名 访问计算机名
	5.服务器套接字ServerSocket（要填写端口）
	6.创建服务器套接字  创建客服端套接字  服务器开启监听  两边同时处理数据传输 启动服务器  启动客户端
	7.操作端口的时候尽量要大于1024端口
	8.DatagramPacket(包数据，包长度，目的地址，目的端口)包裹
	9.DatagramSocket(端口和ip地址)快递小哥    send()发送数据包  receive()接受数据包
	10.MulticastSocket()群发  joinGroup加入广播组   leaveGroup离开广播组  (地址是有范围的224.0.0.0~239.255.255.255)
十三.数据库
	1.增insert into ，删delete from，改update set，查 
	2.mysql -h xxx（远程客户端） -u(用户)xxx -p(密码)xxx
	3.Class.forName("com.mysql.jdbc.Dirver");通过反射机制导入MySQL的包
	4.创建一个对象Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/test",用户,密码);
	5.Statement 发送sql接口  statement.executeQuery(select * from xx)连接到某个表
	6.resuleset结果集接口（类似于返回）.next()下一列数据
	7.sta.addBatch()可以添加很多数据  sta.executeBatch()添加一堆数据  返回一个int数组
十四.Swing高级引用
	1.JSplitPane（）分隔面板  构造方法中可以指定为水平分隔还是垂直分隔
	2.JTabbedPane()选项卡面板
	3.JDesktopPane桌面面板   JInternalJFrame 内部窗体  只能在桌面面板上显示（内部窗体和正常的容器没什么区别）
	4.JMenuBar菜单栏对象  JMenu菜单对象   JMenuItem菜单项对象   setJMenuBar()添加菜单栏的方法    jMenu.setMnemonic(KeyEvent.VK_F);可以设置快捷键
	5.JPopupMenu创建弹出式菜单   要通过鼠标(鼠标释放)监听才能添加弹出式菜单   e.isPopupTrigger()判断此次事件是否为组件弹出事件  调用show方法添加
	6.JToolBar工具栏 一定要采用边界布局 
	7.JFileChoose文件选择器      创建对象  设置选择模式  设置多选还是单选  显示对话框  FileNameExtensionFilter过滤文件名
	8.JProgressBar进度条  setIndeterminate设置为真表示不去诶诶顶进度条 假为确定进度条  setStringPainted设置真表示提示信息 setValue值setString文本
	9.JTable表格（二维数组的名字，列的名字）  setSelectionMode设置选择模式
	10.TableModel创建表格模型  TableModelListener来捕获表格模型事件    DefaultTableModel构造方法
十五.AWT绘图
	1.Ganvas画布类  Graphics绘图类   Graphics2D新绘图类   Shape图形接口   Color颜色类   Stroke画笔接口   Font字体类
	2.要注意顺序  设置好全部之后  在draw画出来  不然没有效果
	3.设置画笔的步骤  创建Sroke接口对象 (如果三个参数 宽度 线断电修饰 线交汇处修饰)  在吧对象添加进来
	4.首先要重置Canvas类里面的paint方法   Graphics2D graphics2d = (Graphics2D) arg0;创建一个画布
	5.drwaImage(图像对象，左上角的x，左上角的y，当图像重新绘制时要通知的对象)
	6.Image image = new ImageIcon("src/7.jpg").getImage();  获取图像资源
	7.当对画布进行改变的时候要对画布进行重新绘制   
	8.drawImage()四个参数表示添加图片   六个参数表示可以放大缩小  八个参数表示图像翻转

第二遍学习
	1.scaner是扫描器，用来读取字符 Scaner s=new Scaner(System.in);创建一个输入流扫描器
	2.每次累加值的数据类型，所有整数运算都自动转换为int类型进行运算，所有浮点数都转换为double运算
	3.使用BigDecimal可以对浮点数进行精确计算 add加法  subtract减法 multiply乘法 divide除法
	4.字符串属于对象而非基本数据类型，所有不能狗使用==，应该使用equals来进行判断
	5.switch只支持对常量的判断，而常量只能是java的基本数据类型，所以一般对string对象进行判断的时候先使用hashCode()方法变成哈希码,在进行判断
	6.使用numberFormat这个类   NumberFormat.getCurrencyInstance输出的数据格式Locale.CHINA用来选择国家
	7.字符串是不可变的对象，每当对字符串进行操作时，都将产生一个新的字符串对象
	8.强制转换为int类型和char类型就能实现unicode的编码
	9.compareTo比较字符串中每个字符的unicode  compareToIgnoreCase()比较每个字符的Unicode但是不区分大小写
	10.java中的一句相连字符串不能分开在两行中写
	11.indexOf查找子字符串的索引位置  lasyindexOf倒叙查找子字符串的索引位置  fromindex查找最后一次出现这个子字符串的位置  substring可以根据前面的位置截取字符串
	12.System.nanoTime() 开始记录当前这个时间   返回的是一个long类型的1000000的数字
	13.单利模式的一般使用方式:先把构造方法修改称为私有模式，然后创建本类的一个静态方法，创建对象的时候调用这个静态方法 在这个方法中就可以实现单例模式
	14.访问权限限定符的可见范围  public  protected  默认    private 
			     同类    可见     可见      可见    可见
			 子类同包    可见     可见      可见   
			子类非同包   可见     可见      
			   非同包    可见     
	15.final修饰域表示初始化不能被修改，修饰方法表示不能被重写，修饰类表示不能创建子类
	16.Integer是基本类型中int类型的包装类，可以将基本类型转换为引用类型,该类提供的静态方法可以完成整形和字符串的转换
	17.Interger.toH...转换为十六进制的字符串  Interger.toB... 转换为二进制的字符串  Integer.toO转换为八进制的字符串
	18.Character.codePointAt()将字符串为Ascll编码  Character.toChars()将Ascll编码转换为字符串
	19.double类型的比较采用 第一个数.Double.compareTo(第二个数)
	20.HashCodeBuilder类是重写hashCode方法的工具类 append添加哈希码  toHashCode计算整体的哈希码
	21.ToStringBuilder类是重写tostring方法的工具类  toString主要是为了输出类的对象调用的方法
	22.使用=表示假克隆  	对象2修改，对象1也会被修改
	23.继承接口Cloneable   里边的clone方法实现浅克隆   对象2修改，对象1不会被修改
	24.序列化克隆技术：将对象写入到流中，写入完成后，在进行读取就可以实现克隆技术
	25.如果类的各个域是基本类型或不可变类型，则可以使用浅克隆,否则使用深刻龙，如果类的域比较复杂，可以使用序列化方法进行实现
	26.transient关键字防止序列化域，如果一个引用类型被Transient,则发反序列化的结果为null,如果一个基本类型被transient则起反序列化的结果是0
	27.给父类继承implements接口可以对父类进行排序   重写里边的方法进行具体的排序
	28.静态内部类是使用static修饰的内部类，在静态内部类中国，可以使用外部类定义的静态属性，但是不能使用非静态属性
	29.Java实现多线程的方式：继承Thread类，再就是实现Runnable接口  (两者都需要重写run()方法)(在启动线程的时候不是调用run方法 而是视同thread的start方法) 
	30.synchronized 线程锁（一个对象只有一把锁）（如果这个同步的对象被其他线程拿走了，这个线程只能处于等待状态，这样就不会发生这个线程爆炸的现状）(可以用来修饰方法或者代码块)代码块:synchronized(this)后面{}来修饰
	31.Thread类的getState方法可以获得线程的状态
	32.ThreadGroup线程组 线程组可以包含其他线程组   每个线程都有一个父线程，允许线程访问自己的线程组信息，但是不能访问其他线程组的
	33.Thread    getName()获取当前线程的名字   setName()设置当前的线程的名字   getId()返回当前线程的标识符   getThreadGroup获取当前线程所在的线程组
	34.isDaemon测试一个线程是否是守护线程  setDaemon设置一个线程为守护线程或者用户线程
	35.线程的休眠和终止都是使用run()方法实现的  系统自带的stop不安全，不推荐使用，还是使用自己定义的布尔值来控制的
	36.volatile关键字被命名为域变量的访问提供了一种免锁机制,使用这个volatile修饰域相当于告诉虚拟机该域可能会被其他线程更新   不使用从寄存器中的值
	37.java中新增的一个java.util.conccurrent来支持同比局，reentratlock可支持，重写，互斥，来实现lock接口的锁   例如:ReentrantLock创建一个ReentrantLock实例  lock获得锁 unlock()释放锁
	38.使用ThreadLocal管理变量，则每个使用该变量的线程都会获得变量的副本，副本之间相互独立，这样每个线程可以随意修改自己的变量副本
	39.生成死锁的的四个条件:资源互斥，请求保持，不能剥夺，和循环等待.通常破坏循环等待是最有效的方法
	40.一维数组反射类的名称前面会一个[加上一个返回值类型的标识符  二维数组前面会有两个[加上返回值类型的标识符
	41.枚举是一种类，注释是一种接口
	42.Field类提供获得接口的信息  setAccessible设置标签是否可以更改  Constructor类提供构造方法  Method提供方法 
	43.getComponentType能获取反射机制的类型   newInstance（第一个参数表示元素类型，第二个参数表示长度）重新声明一个类型(一般用于数组：可以改变数组长度)返回的是一个对象
	44.枚举类型一般并不能进行增删，所有特意提供了     Enumset集合类    noneOf先连接上集和的类 complementOf元素的补集
	45.创建EnumMap是专门针对枚举的Map集和  可以通过键值等一些方法进行增删改查
	46.在类的后面添加上<>就可以知名类型参数，对个参数之间使用逗号分隔开，但是泛型类型参数只能使用类类型，而不能使用基本类型
	47.GregorianGalendar类是Calendar的一个具体子类，提供了大多数地区和国家的事件，不推荐使用date的时间
	48.console.readline会从控制台读取一组字符串  console.password为了专门提供输入的密码方法 回返回一个字符数组  为了防止密码泄露，推荐吧使用密码之后吧数组赋值,防止密码泄露
	49.Math.toRadians是计算某个数字的弧度  Math.toDegress是计算某个数字的角度  BigDecimal如果想要精确计算，推荐使用这个类
	50.Math中  sin,cos,tan表示正，余，切三个，在前面代表反，在后面添加h代表双曲函数
	51.使用Runtime实例可以让成语能够与运行环境相连  getRuntime()获取当前的runtime实例  freeMemory()获取虚拟机的空闲内存  totalMemory()获取虚拟机的全部内存总量(返回的是long类型的内存字节数,一般、1024来使用)
	52.Desktop可以允许java应用程序启动已在本地桌面上注册的关联应用程序. isDesktopSupported判断是否支持 getDesktop获得实例  edit用于修改文件
	53.JDialog窗体要给按钮添加一个点击事件  1.创建对话框实例，把父类窗口传进去，设置对象可见   2.在对话框类中创建构造方法，使用super为别指向父类，窗体标题，第三个用来指定是否堵塞父类窗口
	54.null代表绝对布局(主要是采用setbounds设置)，flowlayout代表流布局(从上倒下，从左得到右以此布局)，borderlayout代表边界布局(总东南西北四个方向进行布局),gridlayout代表网格布局(可以指定网格的行数和列数,当两个数据的*达不到这个总数的时候，优先使用行来进行规范)
	55.windowStateChanged捕获窗体事件  e.getOldState获取旧的窗体状态，返回一个int类型    如果int类型=Frame.NORMAL代表窗体正常化  Frame.MAXIMIZED_BOTH代表窗体达到最大化
	56.getItems代表选项事件所选中的标签 getStateChange代表此事件的类型，是由选中到取消还是从取消到选中(SELECTED目前选中的事件  DESELECTED改变后的事件)
	57.使用File demo =new  File()；（如果只在文件中输入文件名和文件类型。则默认创建在项目的下方）
	58.选择排序法需要定义一个index=0  让index和内部指针进行比较，最后交换数组长度.length和index的位置的数值
	59.输入扫描器的next和nextline主要区别在于是否读入空格，第一个遇到空格就会停止，第二个会把两个都读入
	60.文件字节输入流和输出流的操作:先创建一个文件，创建指向文件的文件子节留，创建字节数组，用write和read的方法读和写一些文件最后记得关闭文件流
	61.文件字符流输入和输出流的操作:先创建一个文件，创建指向文件的文件字符流，第二个参数如果设置为true代表不是覆盖读取,其余和文件字节流一致
	62.带缓冲的字节输入流和输出留:和正常的一样，但是关闭的时候要先关闭缓冲流在关闭文件流 
	63.ip地址封装类:InetAddress是专门针对ip地址的封装类  gethostname获取本机名称gethostaddress获取本地ip地址 getbyname把ip地址转换为Inetaddress对象类的一个实例
	64.TCP程序设计:先创建一个Server Socket服务端套接字 调用accept()方法等待客户机来连接 在创建一个套接字Socket请求与服务器进行连接