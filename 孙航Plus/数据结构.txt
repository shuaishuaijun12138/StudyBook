1.时间复杂度（不考虑系数）（受影响最大的一项）
2.1<lgn<n<nlgn<n2<n3<2^n
3.顺序表中元素的物理顺序和逻辑顺序是一致的
4.存储密度=单链表数据项所占空间/节点所占空间(顺序表=1,单项链表<1)
5.循环链表和单项链表的区别:循环条件判断头指针是否为空
6.当(q.rear+1)%MAXLEN==q.front  表示队列为空
7.子串与主串之间是包含关系
8.模式匹配 子串在主串中首次出现的位置
9.串的紧凑存储（运算处理简单 但缺点是空间十分浪费）
10.串的非紧凑存储（空间利用率高，但缺点是对字符串的处理效率底）
11.串的存储密度=串值所占的存储位/实际分配的存储位
12.匹配模式的时间复杂度（n+m）到(n*m)
13.稀疏矩阵分为三元组存储 十字链表 
14.广义表 字表（包含元素的表）（表示为大写字母）
15.原子 单个元素（表示为小写字母）
16.长度 第一层元素的原子和字表的个数 
17.深度 最多一层的原子个数(递归的深度是无穷)
18.在广义表中除了头元素都是尾元素
19.树中各节点度的最大值为树的度
20.二叉树叶子个数=双分支节点数+1
21.任意一个二叉树节点的先序序列和中序序列都是唯一的
22.指向直接前驱节点或后继节点的指针成为线索
23.线索二叉树(先写出中序遍历 若左子树为空，则线索指向前驱节点 若右子树为空，则指向后继节点)
24.一棵树转为二叉树(连兄弟 断除了父与长子外的联系 旋转)
25.森林转为二叉树(将每个数转为二叉树 依次将后一棵数的根节点作为前一棵树的右子树)
26.二叉树转为树和森林(吧左孩子的所有右孩子与父相连，删原父与右的连线)
27.标识符树(先产生二叉树 读入>根 作为右子树  读入<=根 作为左子树)
28.WPL=权值*路径长度
29.建立哈弗曼树(选中里边最小的两个权值建立二叉树 算出这个树的权值总和在进行比较 一直生成树)（左子树的权值小于右子树）
30.哈弗曼树编码(0代表左 1代表右)
31.任何连通图的连通分量只有一个  非连通图的连通分量有多个
32.任意两顶点都是连通的是连通分图
33.图的生成树中 n个顶点生成树为n-1条边
34.邻接矩阵(时间复杂度n2) （只与顶点有关）（唯一的）
35.邻接表（以每个顶点形成一个单相表）(不唯一)
36.无向图中n个顶点，e条边，则他的邻接表需要n个头结点和2e个表结点 （边稀疏的情况下使用邻接表）
37.深度优先搜索（先根遍历）广度优先搜索（层次遍历）
38.最小生成树(任意一点，连最小权值的一遍，选与他们最小权值的边，直到所有顶点连通)
39.最小生成树(连接权值小的边，不能回路，选n-1条边)
40.最短路径（原点的最小权值边，然后判断源点与邻点之间的距离大还是最小权值的边的和大，之后重复到所有顶点连通）
41.在有向图中，活动代表边的称为AOV网 带有权值的AOV网称为AOE网
42.关键路径（最早发生时刻 从前往后 取最大值）（最晚发生时刻 从后往前 取最小值(尾节点的最早=最晚)）
43.邻接矩阵画法（无向图连接为1不连接为0 有向图连接为权值 不连接为无穷）Adj
44.邻接表画法（根据箭头指向画  无向图没有邻接表）Adj
45.主关键字 可以唯一标识一个记录的关键字称为主关键字
46.二分查找的最大次数:log2(n+1)=?(必须按照关键字排序，只适合顺序存储结构)
47.分块查找（先二分法分块，然后在对每块进行顺序查找）
48.二叉排序树（根的左边小于根，根的右边大于根）
49.删除二叉排序树的节点(如果删除的是根节点，用中序遍历得到的直接前驱节点或后继节点代替)
50.平衡二叉树是平衡因子=1,0,-1
51.平衡因子=左子树的深度-右子树的深度
52.如何转换为平衡二叉树 LL(使节点向右旋转) LR(先转换为LL型，再右)
53.哈希表原理=关键字与数据之间存在着某种关系(映射到泳衣哈希地址上的关键字称为同义词)(冲突不可避免，只能尽量减少)
54.哈希函数方法(直接定址法)(除留余数法)(平方取中法)
55.解决冲突方法(线性探测法，二次探测法,双哈希函数探测法(确定步长，然后增倍步长存放))(链地址法(同义词就连接成一个单项链表))
56.ASL=(所有元素所在的深度之和)/(所有元素的个数)
57.全局有序：有序队列中的关键字一定大于无序区
58.稳定：相同键值之间的位置关系不变
59.插入（直接(把无序按一定方法插入到有序中)(稳定的)(前几趟不会产生全局有序的)，二分(稳定的)，希尔（不稳定）（按下标的一定增量分组，对每组直接插入）(当正序的时候效率最高)）
60.快速(冒泡（稳定的）（一定是全局有序的）（正序快），快速（不稳定）(随机分布，并且每次划分长度相等最高)（选取第一个元素，和最后一个比较，如果大于，则交换，在和第一个比较，如果小于，则交换，重复）)
61.选择（简单（不稳定）（一定是全局有序的）（把无序区的数放在有序区），树形（得到第一后，把他看成倒数第一），堆(效率最低)(全局有序的)）
62.归并（稳定的）（不断地排序相邻的两个元素集）