	1.微信框架的四部分 wxml  js  wxs  wxss
	2.wxml是微信版的html语句
	3.wxml中数据绑定=>变量加双括号绑定出来
	4.data-*   类型Any  自定义属性  会触发组件触发事件时，会发送事件处理函数  
	5.bind*/catch*    类型EventHander   组件的事件   
	6.wxml列表渲染=>动态添加多种元素
	7.wxml条件渲染=>进行条件判断
	8.wxml模板引用=>提供多次应用，减少代码量
	9.wxss是微信版的css语句
	10.微信小程序框架中JavaScript包括ECMAScript  微信小程序  api
	11.浏览器中的JavaScript包括ECMAScript   DOM   BOM
	12.wxs就是运算的css
	13.wxml中使用wxs src来连接到哦wxs文件，module表示名字   wxs中 module.exports来使用写入信息，require可以导入另外的wxs文件
	14.类库Number date math console json Global
	15.View试图层=>(page page page=>wxml,wxss),(App Service逻辑层=>API,Manger),(Native系统层=>JSBridge,微信能力，网络请求，离线存储)三层之间通过Event和data进行交互
	16.启动机制，用户第一次打开称为冷启动，用户在长时间没有打开过称为热启动
	17.微信生命周期.onLaunch,onShow,onHide,onError
	18.可捕获的事件touchstart手指碰到的部分 touchmove手指移动 touchcancel事件被打断 touchend手指抬起 tap手指在按下屏幕超过350毫秒的操作 longpress手指按下超过350毫秒的操作
	19.可冒泡的事件包括所有的可捕获事件，还有别的一些动画事件
	20.view scroll-view滚动容器 swiper movable-view可支持移动和缩放的容器 cover-view可以盖住一些原生的组件
一.
	1).本身使用弹性盒模型布局
	display=flex
	flex-wrap=wrap 超过盒子模型就换行
	flex-direction:column 盒子的排列方式默认是row
	align-items:center 侧轴的排列方式（是否居中）
	justify-content:center 主轴的排列方式（是否居中）
	2).本地缓存.
	wx.setStorage({key:'keyname',data:{name:e.detail.value.user})
	wx.getStorage({key:'keyname',success:function(res){key:'keyname',data:{name:res.data}})
	3).文件缓存:
	正常无法访问本地缓存，需要把本地缓存转到文件缓存, wx.setDate(this...);
	读取文件缓存，在本页面使用{{}}两个花括号进行读取
	4).云端数据:
	wx.request(){url:'',success:function(res){}}
	5).页面跳转:
	wx.navigateTo({url:''})
	6).遍历一个集合:
	<block wx:for="{{arrname}}" wx:key="{{index}}" wx:fot-item='itemName' wx:if="">
	 <view>{{index}}:{{itemName.arrname}}</view>
	</block>
	7).条件渲染:
	wx:if="{{}}"  wx:elif="{{}}" wx:else
	8).模板的定义<template name='templatename'><view>姓名:{{name}}</view></template>
	   模板的引用:<template is="templateName" data="{{指向那个数据}}"></template>
	   impor src="引入模板"  作用域:不会引入模板中的模板
	   include src="引入模板"  相当于把代码完全引入
二.
	wxss: Wei Xin Style Sheel
	引入尺寸rpx:
	element选择器 全部选择器，可以选择对应的全部组件
	ECMAScript类似与JavaScript:


-------重新学习--------

一.试图与渲染

  I.组件的基本使用

	1).和html的基本组件差不多

  II.数据绑定

	1).通过{{}}来获取js文本里的data数据
	2).this.setData() 参数为一个json  可以修改当前的js页面数据
	3).bindtap绑定点击事件

  III.渲染标签

	1).wx:if  绑定具体的数据即可
	2).wx:else  和上面的if绑定,不需要定义数据
	3).wx:for  参数  wx:key是索引名字  下面可以调用index索引  wx:for-item 数据的名字 

  IV.模板的使用

	1).include src 可以导入别的页面的模板 
	2).注意标签要有/结尾
	3).import src可以导入模板  需要配合template使用  
	   *.在被导入的页面设计template name='xx'
	   *.在导入的页面先使用import 在使用 template is='xxx'来使用
	   *.假设被导入的页面导入了另外一个页面，不能导入另外的页面
	   *.也可以给被导入的页面中设计数据 , 在导入页面中设置date属性即可

二.事件

  I.事件的理解

	1).一种用户行为
	2).一种通讯方式

  II.事件

	1).点击事件   tap
	2).长按事件   longtap
	3).触摸事件   touchstart  toucahend  touchmove  touchcancel
	4).其他       submit input....
	5).以上这些事件都算是冒泡事件

  III.事件的绑定

	1).bind绑定
	2).catch绑定
	3).catch绑定会阻止事件的冒泡

  IV.事件的对象

	1).type        类型
	2).timeStamp   时间戳
	3).target      事件源组件
	4).currentTarget  当前组件
	5).touches        触摸点数

三.微信小程序的配置

  I.app页面的配置
	
	1).tabBar  底部tab栏 
	2).配置的tabBar中list第一项必须是page中的第一项才显示	
	3).页面的配置主要是代替全局配置

四.app对象使用和生命周期

  I.  app.js是一个全局对象  在页面中调用getApp()可以获取这个对象 
  II. app.launch   app.show    page.onload   page.onshow    page.onready
  III.当切换到别的页面时调用
  IV. 页面的跳转，调用wx.navigateTo()传递一个url   
  V.  页面的跳转2.调用wx.redirectTo()传递一个url   这个会unonload销毁原页面
  VI. 页面的跳转3.调用<navigator url='../test/index?id=12313'>  
     *特别注意:wx.navigateTo和wx.redirectTo不允许跳转到tabBar页面，只能使用wx.switchTab跳转到tabBar页面
  VII. logs.onShow() 当跳转会本页面，本页面调用(切换到前台)
  VIII.logs.onHide()  当跳转到别的页面时，本页面调用(切换到后台)

五.小程序的UI设计

  I.布局和样式
 
	1).view  类似于  div 
	2).lable   可以把文字和复选框圈起来，这样点击文字，复选框就会被选中
	3).picker  时间选择器
	4).slider

六.云开发

  I.(必须*)在 app.json / game.json 中增加字段 "cloud": true
  II.然后调用wx.cloud.init()